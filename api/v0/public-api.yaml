openapi: 3.0.2
info:
  title: Public PTI API
  version: 0.0.1
  description: Public PTI API
servers:
  - url: 'https://secure.apidev.pticlient.com'
security:
  - clientId: []
    signature: []
  - userToken: []
paths:
  /auth/userToken:
    post:
      summary: Get a user token
      security:
        - clientId: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userTokenRequest'
        required: true
      responses:
        '200':
          description: userToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userToken'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '403':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /users:
    get:
      summary: Get a list of users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/objectReference'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    post:
      summary: Add a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/oneOfUserSubTypes'
      responses:
        '201':
          description: Successfully added User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/objectReference'
        '400':
          description: Missing required fields on User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '409':
          description: User already exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  '/users/{userId}':
    parameters:
      - name: userId
        schema:
          type: string
          pattern: '^[a-z0-9_-]{3,255}$'
          maxLength: 255
        in: path
        required: true
    get:
      summary: Get a specific User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oneOfUserSubTypes'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    put:
      summary: Update a specific User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/oneOfUserSubTypes'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/objectReference'
        '400':
          description: User missing required fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  '/users/{userId}/kyc':
    parameters:
      - name: userId
        schema:
          type: string
          pattern: '^[a-z0-9_-]{3,255}$'
          maxLength: 255
        in: path
        required: true
    get:
      summary: Get a the latest kyc result for a user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kyc'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    post:
      summary: Start a kyc for the user
      parameters:
        - name: x-pti-request-id
          schema:
            type: string
            pattern: '^[a-z0-9_-]{3,255}$'
            maxLength: 255
          in: header
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/oneOfUserSubTypes'
        required: true
      responses:
        '201':
          description: started
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/objectReference'
        '400':
          description: User missing required fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  '/users/{userId}/transactionLogs':
    parameters:
      - name: userId
        schema:
          type: string
          pattern: '^[a-z0-9_-]{3,255}$'
          maxLength: 255
        in: path
        required: true
    post:
      summary: Log a transaction
      parameters:
        - name: x-pti-request-id
          schema:
            type: string
            pattern: '^[a-z0-9_-]{3,255}$'
            maxLength: 255
          in: header
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/oneOfTransactionSubTypes'
      responses:
        '201':
          description: Successfully added transaction log
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/objectReference'
        '400':
          description: Missing required fields on Transaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '406':
          description: >-
            More information about the User is needed in order to approve the
            transaction.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputRequest'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  '/users/{userId}/transactionLogs/{requestId}':
    parameters:
      - name: userId
        schema:
          type: string
          pattern: '^[a-z0-9_-]{3,255}$'
          maxLength: 255
        in: path
        required: true
      - name: requestId
        schema:
          type: string
          pattern: '^[a-z0-9_-]{3,40}$'
          maxLength: 40
        in: path
        required: true
    get:
      summary: Get a specific Transaction Log for a specific User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oneOfTransactionSubTypes'
        '404':
          description: User of Transaction Log not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  '/users/{userId}/transactions/fiat/funding':
    parameters:
      - name: userId
        schema:
          type: string
          pattern: '^[a-z0-9_-]{3,255}$'
          maxLength: 255
        in: path
        required: true
    post:
      summary: Execute a fiat funding (fiat-in)
      parameters:
        - name: x-pti-request-id
          schema:
            type: string
            pattern: '^[a-z0-9_-]{3,255}$'
            maxLength: 255
          in: header
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fiatFundingTransaction'
      responses:
        '201':
          description: Successfully initiated the transaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/objectReference'
        '400':
          description: 'Missing required fields on Transaction, invalid operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  '/users/{userId}/transactions/{requestId}':
    parameters:
      - name: userId
        schema:
          type: string
          pattern: '^[a-z0-9_-]{3,255}$'
          maxLength: 255
        in: path
        required: true
      - name: requestId
        schema:
          type: string
          pattern: '^[a-z0-9_-]{3,40}$'
          maxLength: 40
        in: path
        required: true
    get:
      summary: Get a specific transaction result for a specific User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oneOfTransactionSubTypes'
        '404':
          description: User of Transaction Log not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  '/users/{userId}/assets':
    parameters:
      - name: userId
        schema:
          type: string
          pattern: '^[a-z0-9_-]{3,255}$'
          maxLength: 255
        in: path
        required: true
    post:
      summary: Upload an asset for a user
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                metaInformation:
                  $ref: '#/components/schemas/assetMetaInformation'
                asset:
                  type: string
                  format: binary
      responses:
        '201':
          description: Successfully uploaded the asset, related user returned
        '400':
          description: 'Missing required fields on asset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
components:
  schemas:
    address:
      type: object
      additionalProperties: false
      properties:
        streetAddress:
          type: string
        city:
          type: string
        postalCode:
          type: string
        stateCode:
          $ref: '#/components/schemas/stateCode'
        country:
          $ref: '#/components/schemas/countryCode'
        default:
          type: boolean
    bankAccountPaymentInformation:
      type: object
      required:
        - bankAccountNumber
      allOf:
        - $ref: '#/components/schemas/paymentInformation'
      properties:
        bankAccountNumber:
          type: string
        bankSwiftCode:
          type: string
          description: Valid bank swift code
          pattern: '[A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3})?'
        bankRoutingNumber:
          type: string
          description: 'Valid bank routing number, between 7 and 12 digits'
          pattern: '^[0-9]{7,12}$'
    bii:
      type: object
      properties:
        value:
          type: string
    business:
      type: object
      allOf:
        - $ref: '#/components/schemas/user'
      properties:
        biis:
          type: array
          items:
            $ref: '#/components/schemas/oneOfBiiSubTypes'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/address'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/email'
        owners:
          type: array
          items:
            $ref: '#/components/schemas/person'
        phones:
          type: array
          items:
            $ref: '#/components/schemas/phone'
        sectors:
          type: array
          items:
            type: string
        creationDate:
          type: string
          description: ISO 8601
          pattern: '^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])$'
          maxLength: 10
        businessType:
          type: string
          maxLength: 50
          pattern: '^[A-Z]+(?:_[A-Z]+)*$'
        businessName:
          type: string
    client:
      required:
        - name
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          maxLength: 255
          pattern: '.*'
        countryCode:
          $ref: '#/components/schemas/countryCode'
        stateCode:
          $ref: '#/components/schemas/stateCode'
        publicKey:
          $ref: '#/components/schemas/publicKey'
        id:
          type: string
          format: uuid
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
          maxLength: 40
        mainWebhook:
          $ref: '#/components/schemas/webhook'
    countryCode:
      type: object
      additionalProperties: false
      properties:
        code:
          type: string
          description: 'ISO 3166 alpha 1 country code, example US'
          pattern: '^([A-Za-z]{2})$'
    encryptedCreditCardPaymentInformation:
      type: object
      required:
        - cseInformations
      allOf:
        - $ref: '#/components/schemas/paymentInformation'
      properties:
        cseInformations:
          type: object
          additionalProperties:
            type: string
        creditCardLast4:
          type: string
          pattern: '\d{4}'
        creditCardNumberHash:
          type: string
          pattern: '.*'
        cardHolderFirstName:
          description: first name of card holder
          pattern: '.*'
          minLength: 3
          maxLength: 255
          type: string
        cardHolderLastName:
          description: first name of card holder
          pattern: '.*'
          type: string
          minLength: 3
          maxLength: 255
        creditCardAddress:
          description: cc address
          type: object
          allOf:
            - $ref: '#/components/schemas/address'
        transactionDescription:
          description: cc transaction description
          pattern: '.*'
          type: string
          minLength: 3
          maxLength: 1000
        statementMessage:
          description: cc statement msg
          pattern: '.*'
          type: string
          minLength: 3
          maxLength: 50
    creditCardPaymentInformation:
      type: object
      required:
        - creditCardNumber
        - expirationYear
        - expirationMonth
        - cvc
        - cardHolderFirstName
        - cardHolderLastName
      allOf:
        - $ref: '#/components/schemas/paymentInformation'
      properties:
        creditCardType:
          type: string
          pattern: '^[\w\-\s]+$'
          maxLength: 50
        creditCardNumber:
          type: string
          pattern: '^(([0-9])([- ]?)){15,16}$'
        expirationYear:
          type: string
          description: 2 or 4 digits
          pattern: '^([0-9]){2,4}$'
        expirationMonth:
          description: 2 digits
          type: string
          pattern: '^([0-9]){2}$'
        cvc:
          description: 3 or 4 digits
          type: string
          pattern: '^([0-9]){3,4}$'
        cardHolderFirstName:
          description: first name of card holder
          pattern: '.*'
          minLength: 3
          maxLength: 255
          type: string
        cardHolderLastName:
          description: first name of card holder
          pattern: '.*'
          type: string
          minLength: 3
          maxLength: 255
        statementMessage:
          description: cc statement msg
          pattern: '.*'
          type: string
          minLength: 3
          maxLength: 50
        transactionDescription:
          description: cc transaction description
          pattern: '.*'
          type: string
          minLength: 3
          maxLength: 1000
        creditCardAddress:
          description: cc address
          type: object
          allOf:
            - $ref: '#/components/schemas/address'
    ein:
      type: object
      allOf:
        - $ref: '#/components/schemas/bii'
      properties:
        number:
          type: string
          description: 'Ein number, properly formatted, example 12-3456789'
          pattern: '^([07][1-7]|1[0-6]|2[0-7]|[35][0-9]|[468][0-8]|9[0-589])-?\d{7}$'
    email:
      required:
        - address
      type: object
      additionalProperties: false
      properties:
        default:
          type: boolean
        address:
          type: string
          format: email
          pattern: '^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$'
          maxLength: 320
    error:
      required:
        - code
        - message
      additionalProperties: false
      properties:
        code:
          format: int32
          type: integer
        message:
          pattern: '.*'
          type: string
          maxLength: 1000
    fiatFundingTransaction:
      type: object
      allOf:
        - $ref: '#/components/schemas/transaction'
      properties:
        sourceMethod:
          $ref: '#/components/schemas/fiatPaymentMethod'
    fiatPaymentMethod:
      type: object
      allOf:
        - $ref: '#/components/schemas/paymentMethod'
      properties:
        currency:
          type: string
          pattern: '^([A-Za-z]{3})$'
          maxLength: 3
        paymentInformation:
          $ref: '#/components/schemas/oneOfFiatPaymentInformation'
    fiatWallet:
      type: object
      allOf:
        - $ref: '#/components/schemas/wallet'
      properties:
        currency:
          type: string
          pattern: '^([A-Za-z]{3})$'
          maxLength: 3
    fundingTransaction:
      type: object
      allOf:
        - $ref: '#/components/schemas/transactionType'
      properties:
        sourceMethod:
          $ref: '#/components/schemas/oneOfPaymentMethod'
    inputRequest:
      required:
        - url
      type: object
      additionalProperties: false
      properties:
        fields:
          type: array
          items:
            type: string
            maxLength: 100
            pattern: '.*'
        url:
          type: string
          minLength: 1
          maxLength: 1022
          pattern: '^([\w.,@?^=%&amp;:/~+#-]*[\w@?^=%&amp;/\.~+#-])?$'
    itin:
      type: object
      allOf:
        - $ref: '#/components/schemas/pii'
      properties:
        number:
          type: string
          description: 'itin number, properly formatted, example 911-83-1111'
          pattern: '^9\d{2}-?((5[0-9]|6[0-5])|(8[3-8])|(9[0-2])|(9[4-9]))-?\d{4}$'
    kyc:
      type: object
      additionalProperties: false
      properties:
        status:
          enum:
            - ACCEPTED
            - REFUSED
            - MANUAL_REVIEW
          type: string
        requestId:
          pattern: '^[a-z0-9_-]{3,40}$'
          maxLength: 40
          type: string
    name:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        middleName:
          type: string
    objectReference:
      required:
        - id
        - link
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          pattern: '^[a-z0-9_-]{3,40}$'
          maxLength: 40
        link:
          type: string
          minLength: 1
          maxLength: 1022
          pattern: '^([\w.,@?^=%&amp;:/~+#-]*[\w@?^=%&amp;/\.~+#-])?$'
    oneOfBiiSubTypes:
      required:
        - type
      properties:
        type:
          type: string
          maxLength: 50
          pattern: '^[A-Z]+(?:_[A-Z]+)*$'
      oneOf:
        - $ref: '#/components/schemas/ein'
      discriminator:
        propertyName: type
    oneOfFiatPaymentInformation:
      required:
        - type
      properties:
        type:
          type: string
          maxLength: 50
          pattern: '^[A-Z]+(?:_[A-Z]+)*$'
      oneOf:
        - $ref: '#/components/schemas/encryptedCreditCardPaymentInformation'
        - $ref: '#/components/schemas/paypalPaymentInformation'
        - $ref: '#/components/schemas/bankAccountPaymentInformation'
      discriminator:
        propertyName: type
    oneOfPaymentMethod:
      required:
        - paymentMethodType
      properties:
        paymentMethodType:
          type: string
          maxLength: 50
          pattern: '^[A-Z]+(?:_[A-Z]+)*$'
      oneOf:
        - $ref: '#/components/schemas/tokenPaymentMethod'
        - $ref: '#/components/schemas/fiatPaymentMethod'
      discriminator:
        propertyName: paymentMethodType
    oneOfPiiSubTypes:
      required:
        - type
      properties:
        type:
          type: string
          maxLength: 50
          pattern: '^[A-Z]+(?:_[A-Z]+)*$'
      oneOf:
        - $ref: '#/components/schemas/ssn'
        - $ref: '#/components/schemas/itin'
      discriminator:
        propertyName: type
    oneOfTransactionSubTypes:
      required:
        - type
      properties:
        type:
          type: string
          maxLength: 50
          pattern: '^[A-Z]+(?:_[A-Z]+)*$'
      oneOf:
        - $ref: '#/components/schemas/fundingTransaction'
        - $ref: '#/components/schemas/withdrawalTransaction'
        - $ref: '#/components/schemas/transferTransaction'
      discriminator:
        propertyName: type
    oneOfUserSubTypes:
      required:
        - type
      properties:
        type:
          type: string
          maxLength: 50
          pattern: '^[A-Z]+(?:_[A-Z]+)*$'
      oneOf:
        - $ref: '#/components/schemas/person'
        - $ref: '#/components/schemas/business'
      discriminator:
        propertyName: type
    oneOfWalletSubTypes:
      required:
        - type
      properties:
        type:
          type: string
          maxLength: 50
          pattern: '^[A-Z]+(?:_[A-Z]+)*$'
      oneOf:
        - $ref: '#/components/schemas/tokenWallet'
        - $ref: '#/components/schemas/fiatWallet'
      discriminator:
        propertyName: type
    paymentInformation:
      type: object
      properties:
        type:
          type: string
          maxLength: 50
          pattern: '^[A-Z]+(?:_[A-Z]+)*$'
    paymentMethod:
      type: object
    paypalPaymentInformation:
      type: object
      required:
        - paymentAddress
        - confirmedAddress
        - accountId
      allOf:
        - $ref: '#/components/schemas/paymentInformation'
      properties:
        confirmedAddress:
          type: string
          pattern: '^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$'
          format: email
          maxLength: 320
        paymentAddress:
          type: string
          pattern: '^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$'
          format: email
          maxLength: 320
        payerStatus:
          type: string
          pattern: '.*'
          maxLength: 100
        accountId:
          type: string
          pattern: '.*'
          maxLength: 255
    person:
      type: object
      allOf:
        - $ref: '#/components/schemas/user'
      properties:
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/address'
        piis:
          type: array
          items:
            $ref: '#/components/schemas/oneOfPiiSubTypes'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/email'
        phones:
          type: array
          items:
            $ref: '#/components/schemas/phone'
        name:
          $ref: '#/components/schemas/name'
        gender:
          type: string
          minLength: 1
          maxLength: 1
          description: ISO/IEC 5218 / vCard4
          pattern: '^[0129MmfFoOnNuU]'
        dateOfBirth:
          description: ISO 8601
          pattern: '^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])$'
          maxLength: 10
          type: string
    pii:
      type: object
      required:
        - type
      properties:
        value:
          type: string
          maxLength: 255
          pattern: '.*'
        type:
          type: string
          pattern: '.*'
          maxLength: 50
      discriminator:
        propertyName: type
    phone:
      type: object
      additionalProperties: false
      properties:
        default:
          type: boolean
        number:
          type: string
          description: >-
            Phone number, can be formatted using plus sign, spaces, parenthesis
            or hyphens
          pattern: >-
            /^[+]?(?:\(\d+(?:\.\d+)?\)|\d+(?:\.\d+)?)(?:[
            -]?(?:\(\d+(?:\.\d+)?\)|\d+(?:\.\d+)?))*(?:[ ]?(?:x|ext)\.?[
            ]?\d{1,5})?$/
        type:
          type: string
          pattern: '^(WORK|HOME|MOBILE)'
          maxLength: 10
    publicKey:
      type: object
      additionalProperties: false
      properties:
        type:
          type: string
          maxLength: 50
          pattern: .*
        content:
          type: string
          maxLength: 2500
          pattern: .*
    ssn:
      type: object
      allOf:
        - $ref: '#/components/schemas/pii'
      properties:
        number:
          type: string
          description: 'Valid us formatted SSN, example 222-22-2222'
          pattern: '^\d{3}-\d{2}-\d{4}$'
    stateCode:
      type: object
      additionalProperties: false
      properties:
        code:
          type: string
          description: 'ISO 3166-2 state code, example US-CA'
          pattern: '^([A-Za-z]{2}-[A-Za-z0-9]{2})$'
    tokenPaymentInformation:
      type: object
      required:
        - address
        - tokenType
      allOf:
        - $ref: '#/components/schemas/paymentInformation'
      properties:
        address:
          type: string
          pattern: '.*'
          maxLength: 1050
        tokenType:
          type: string
          pattern: '^([A-Za-z]{3})$'
          maxLength: 3
    tokenPaymentMethod:
      type: object
      allOf:
        - $ref: '#/components/schemas/paymentMethod'
      properties:
        paymentInformation:
          $ref: '#/components/schemas/tokenPaymentInformation'
    tokenWallet:
      type: object
      allOf:
        - $ref: '#/components/schemas/wallet'
      properties:
        tokenType:
          type: string
          pattern: '^([A-Za-z]{3})$'
          maxLength: 3
    transaction:
      type: object
      properties:
        requestId:
          type: string
          pattern: '^[a-z0-9_-]{3,40}$'
          maxLength: 40
        status:
          type: string
        usdValue:
          type: number
        amount:
          type: number
        date:
          type: string
          description: ISO-8601
          pattern: '^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:\.\d{1,9})?(?:Z|[+-][01]\d:[0-5]\d)'
          maxLength: 40
          required: true
        initiator:
          $ref: '#/components/schemas/oneOfUserSubTypes'
    transferTransaction:
      type: object
      allOf:
        - $ref: '#/components/schemas/transactionType'
      properties:
        sourceTransferMethod:
          $ref: '#/components/schemas/oneOfPaymentMethod'
        destinationTransferMethod:
          $ref: '#/components/schemas/oneOfPaymentMethod'
        destination:
          $ref: '#/components/schemas/oneOfUserSubTypes'
    transactionType:
      type: object
      required:
        - type
      allOf:
        - $ref: '#/components/schemas/transaction'
      properties:
        type:
          type: string
      discriminator:
        propertyName: type
    user:
      type: object
      required:
        - type
      properties:
        id:
          type: string
          pattern: '^[a-z0-9_-]{3,255}$'
          maxLength: 255
        type:
          type: string
      discriminator:
        propertyName: type
    userToken:
      required:
        - accessToken
        - expiresAt
        - tokenType
      type: object
      additionalProperties: false
      properties:
        accessToken:
          type: string
          pattern: '^[A-Za-z0-9-_=]+\.[A-Za-z0-9-_=]+\.?[A-Za-z0-9-_.+\/=]*$'
          minLength: 128
          maxLength: 4096
        expiresAt:
          type: number
          minimum: 1200000000
          maximum: 2147483647
        tokenType:
          type: string
          pattern: ^JWT$
          maxLength: 3
    userTokenRequest:
      required:
        - url
        - method
      type: object
      additionalProperties: false
      properties:
        url:
          type: string
          minLength: 1
          maxLength: 1022
          pattern: '^([\w.,@?^=%&amp;:/~+#-]*[\w@?^=%&amp;/\.~+#-])?$'
        method:
          type: string
          minLength: 3
          maxLength: 6
          pattern: ^(GET|POST|PUT|PATCH|DELETE|OPTIONS|CONNECT)$
    wallet:
      type: object
      properties:
        type:
          type: string
          maxLength: 50
          pattern: '^[A-Z]+(?:_[A-Z]+)*$'
        name:
          type: string
          maxLength: 255
          pattern: '.*'
        balance:
          type: number
    webhook:
      required:
        - url
      type: object
      additionalProperties: false
      properties:
        url:
          type: string
    withdrawalTransaction:
      type: object
      allOf:
        - $ref: '#/components/schemas/transactionType'
      properties:
        destinationMethod:
          $ref: '#/components/schemas/oneOfPaymentMethod'
    assetMetaInformation:
      type: object
      properties:
        assetType:
          type: string
        tags:
          type: object
          additionalProperties:
            type: string

  securitySchemes:
    clientId:
      type: apiKey
      in: header
      name: x-pti-client-id
      description: >-
        All requests must include the x-pti-client-id header containing your
        client ID.
    signature:
      type: apiKey
      in: header
      name: x-pti-signature
      description: Client signature of requests.
    userToken:
      type: apiKey
      in: header
      name: x-pti-token
      description: User token.
